name: Build and Tests
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      
permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  build:
    name: Build solution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          dotnet restore

      - name: Build projects
        run: |
          dotnet build Training.sln --no-restore

      - name: Run unit tests
        run: |
          dotnet test Training.sln --collect:"XPlat Code Coverage" --logger trx --results-directory ./TestResults
          
      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: ./TestResults

      - name: Report code coverage
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator "-reports:TestResults/**/*.xml" "-targetdir:TestResults/Coverage" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: CodeCoverage
          path: TestResults/Coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./TestResults/Coverage/Cobertura.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: XUnit tests
          path: ./TestResults/*.trx
          reporter: dotnet-trx
          
          

